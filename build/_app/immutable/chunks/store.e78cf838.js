var h=Object.defineProperty;var m=(s,e,t)=>e in s?h(s,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):s[e]=t;var i=(s,e,t)=>(m(s,typeof e!="symbol"?e+"":e,t),t);import{d as o}from"./index.f4516e11.js";import{d as u,B as n,a as y,g as l}from"./BaseRepo.b0f9c191.js";import"./investments.1f416521.js";import"./subscriptions.435749da.js";class w{getUserParams(){return u.params.get(r.userId)}updateUserParams(e){return u.params.update(r.userId,e)}}const d=new w,c=class{constructor(){this.id=c.userId,this.favoriteAccountId="",this.saveDataLocallyOnClose=!0,this.saveImportedFiles=!0}};let r=c;i(r,"userId","user");function f(){return!!window.__TAURI__}const v=new n("categories");class A{constructor(e,t){this.id=null,this.name=e||"",this.color=t||"#DDD"}}class b extends y{constructor(){super("transactions")}updateAllCategory(e,t){return this.table.where("id").anyOf(e).modify({categoryId:t.id})}removeByAccount(e){return this.table.where("accountId").equals(e).delete()}getMostRecent(){return this.table.orderBy("date").last()}getByAccount(e,t){return e?t?this.table.where("date").above(t).and(a=>a.accountId===e).toArray():this.table.where("accountId").equals(e).toArray():Promise.resolve([])}}const g=new b;class x{constructor(e,t,a,p){this.id=null,this.date=e||new Date,this.description=t||"",this.value=a||0,this.accountId=p||null,this.categoryId=null,this.orderNumber=0}}class D extends n{constructor(){super("accounts")}updateBalance(e,t){return this.table.update(e,{balance:t})}remove(e){return g.removeByAccount(e),super.remove(e)}}const M=new D;class O{constructor(){this.name="",this.color="#DDD",this.balance=0}}new n("projects");const I=o(l(()=>d.getUserParams()),s=>{let e=s||new r;return f()||(e.saveDataLocallyOnClose=!1,e.saveImportedFiles=!1),e});I.set=d.updateUserParams;const R=o(l(()=>v.getAll()),s=>{var e;return s=s||[],(s.length===0||((e=s[0])==null?void 0:e.id)!==null)&&s.unshift(new A("None","#DDD")),s}),q=o(R,s=>new Map(s.map(e=>[e.id,e])));export{M as A,v as C,r as P,g as T,O as a,q as b,R as c,x as d,A as e,f as i,I as p};
